@using System.Security.Claims
@{
    string? playerId = User.FindFirst("PlayerId")?.Value;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EIUBetApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/EIUBetApp.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">EIUBetApp</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        @* <li class="nav-item"> *@
                        @*     <a class="nav-link text-dark" asp-area="" asp-controller="Game" asp-action="Index">Tài Xỉu</a> *@
                        @* </li> *@

                        @* <li class="nav-item"> *@
                        @*     <a class="nav-link text-dark" asp-area="" asp-controller="Lobby" asp-action="Index">Lobby</a> *@
                        @* </li> *@

                        @* Show Admin link only if user is in Admin role *@
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Dashboard">Admin</a>
                            </li>
                        }
                    </ul>

                    <!-- Right side: user info and login/logout -->
                    <div class="d-flex ms-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <span class="navbar-text me-3 text-success">
                                Hello, @User.FindFirst("Username")?.Value!
                            </span>
                            <a class="btn btn-outline-primary me-2" asp-area="" asp-controller="Account" asp-action="Logout">Logout</a>
                        }
                        else
                        {
                            <a class="btn btn-outline-primary me-2" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container-fluid p-0">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
    @if (User.Identity.IsAuthenticated && !string.IsNullOrEmpty(playerId))
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
        <script>
            const playerId = '@playerId';
            let connection;

            async function startConnection() {
                connection = new signalR.HubConnectionBuilder()
                    .withUrl("/betHub")
                    .withAutomaticReconnect()
                    .build();

                try {
                    await connection.start();
                    console.log("Connected to SignalR hub");

                    if (playerId) {
                        await connection.invoke("UpdateOnlineStatus", playerId, true);
                    }
                } catch (err) {
                    console.error("SignalR connection failed:", err);
                }
            }

            startConnection();

            // Hook logout button
            const logoutBtn = document.querySelector('a[href$="Logout"]');
            if (logoutBtn) {
                logoutBtn.addEventListener("click", async (e) => {
                    e.preventDefault();

                    if (connection && playerId) {
                        await connection.invoke("UpdateOnlineStatus", playerId, false);
                    }

                    setTimeout(() => {
                        window.location.href = logoutBtn.href;
                    }, 200);
                });
            }

            // On tab close
            window.addEventListener("beforeunload", function () {
                if (playerId) {
                    navigator.sendBeacon("/OnlineStatus/SetOffline?playerId=" + playerId);
                }
            });
        </script>
    }

</body>
</html>
