@{
    ViewData["Title"] = "Home";
}
@{
    var playerId = TempData["PlayerId"]?.ToString();
}
@model List<EIUBetApp.Models.Game>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - EIUBetApp</title>
   
    <style>
        body, html {
            height: 100%;
            margin: 0;
        }
        .center-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f8f9fa;
        }
        .game-button {
            width: 200px;
            height: 200px;
            background-color: #fff;
            border: 2px solid #007bff;
            border-radius: 10px;
            text-align: center;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.15);
            transition: all 0.3s ease;
        }
        .game-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.25);
            cursor: pointer;
        }
        .game-button img {
            max-width: 100px;
            height: auto;
            margin-bottom: 10px;
        }
        .game-button span {
            display: block;
            font-size: 18px;
            font-weight: bold;
            color: #007bff;
        }
    </style>
</head>
<body>

<div class="center-container">
    @foreach (var game in Model)
    {
        <div class="game-button me-2" onclick="location.href='@Url.Action("Index", "Lobby", new { gameId = game.GameId })'">
            <img src="~/Assets/@game.Thumbnail" alt="@game.Name" />
            <span>@game.Name</span>
        </div>
    }
</div>
    @if (!string.IsNullOrEmpty(playerId))
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
        <script>
            const playerId = '@playerId';

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/betHub?playerId=" + playerId)
                .withAutomaticReconnect()
                .build();

                            connection.onreconnected(() => {
                console.log("Reconnected to SignalR hub");
                connection.invoke("UpdateOnlineStatus", playerId, true);
            });

            connection.start()
                .then(() => {
                    console.log("Connected to SignalR hub");
                    connection.invoke("UpdateOnlineStatus", playerId, true)
                        .catch(err => console.error(err.toString()));
                })
                .catch(err => console.error("SignalR connection failed:", err));
        </script>
    }

</body>
</html>
