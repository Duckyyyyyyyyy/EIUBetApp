@{
    Layout = "_GameLayout";
}
<!DOCTYPE html>
<html>
<head>
    <title>Game Tài Xỉu</title>
    <link rel="stylesheet" href="~/css/SicBo.css" asp-append-version="true" />
</head>
<body>
    <div class="main-layout">
        <!-- Sidebar -->
        <aside class="sidebar bg-dark p-3 rounded shadow-sm" style="min-width: 250px;">
            <div class="mb-4">
                <h5 class="fw-bold text-white">🎮 Chào mừng</h5>
                <p class="text-light">
                    <span class="badge bg-primary me-1">Player</span>
                    <span class="text-muted">đến với phòng:</span>
                    <span class="fw-semibold">VIP Room</span>
                </p>
            </div>

            <div class="card mb-3 bg-dark text-light shadow-sm">
                <div class="card-body">
                    <h5 class="card-title text-success fw-bold">👤 @ViewBag.Username</h5>
                    <p class="card-text mb-1"><i class="bi bi-envelope-fill me-2"></i>Email: <span class="text-muted">@ViewBag.Email</span></p>
                    <p class="card-text"><i class="bi bi-cash-stack me-2"></i>Balance: <span id="balance" class="fw-bold text-danger">$@ViewBag.Balance</span></p>
                </div>
            </div>

            <a href="/Home/Index" class="btn btn-outline-danger w-100">🚪 Thoát phòng</a>
        </aside>

        <section class="game-section">
            <!-- Dice Display -->
            <div class="dice-wrapper">
                <div class="containerD" id="dice1">🎲</div>
                <div class="containerD" id="dice2">🎲</div>
                <div class="containerD" id="dice3">🎲</div>
            </div>

            <!-- Latest Results -->
            <div id="latestResults" class="text-center p-3 border mb-3">
                <h3>8 Lần Kết Quả Mới Nhất</h3>
                <div id="resultsContainer">
                    <!-- Results will be populated dynamically -->
                </div>
            </div>

            <!-- Enhanced Betting Section -->
            <div class="betting-section">
                <h2 class="betting-title">💰 PLACE YOUR BET 💰</h2>

                <!-- Bet Amount Selection -->
                <div class="bet-amount-section">
                    <div class="bet-amount-label">Chọn số tiền cược:</div>
                    <div class="bet-amount-buttons">
                        <button class="bet-amount-btn selected" data-amount="10">$10</button>
                        <button class="bet-amount-btn" data-amount="25">$25</button>
                        <button class="bet-amount-btn" data-amount="50">$50</button>
                        <button class="bet-amount-btn" data-amount="100">$100</button>
                    </div>
                </div>

                <!-- Prediction Buttons -->
                <div class="prediction-buttons">
                    <button class="predict-btn" data-value="xiu">
                        <i class="bi bi-arrow-down-circle-fill me-2"></i>
                        Xỉu (4-10)
                        <div style="font-size: 0.9rem; margin-top: 5px;">Tổng nhỏ</div>
                    </button>
                    <button class="predict-btn" data-value="tai">
                        <i class="bi bi-arrow-up-circle-fill me-2"></i>
                        Tài (11-17)
                        <div style="font-size: 0.9rem; margin-top: 5px;">Tổng lớn</div>
                    </button>
                </div>

                <!-- Spin Button -->
                <button class="btn" id="spinBtn">
                    <span style="margin-left: 30px;">Lắc Xúc Xắc</span>
                </button>
            </div>

            <!-- Result Display -->
            <div class="result-display">
                <p id="resultText"></p>
                <p id="sumResult"></p>
            </div>
        </section>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let prediction = null;
        let betAmount = 10;
        let balance = @ViewBag.Balance;
        let latestResults = [];

        // Initialize with empty results container
        $(document).ready(function () {
            updateResultsDisplay();
        });

        // Bet amount selection
        $('.bet-amount-btn').click(function () {
            betAmount = parseInt($(this).data('amount'));
            $('.bet-amount-btn').removeClass('selected');
            $(this).addClass('selected');
        });

        // Prediction selection with enhanced visual feedback
        $(".predict-btn").click(function () {
            prediction = $(this).data("value");
            $(".predict-btn").removeClass("selected");
            $(this).addClass("selected");

            // Add a subtle shake animation
            $(this).css('animation', 'none');
            setTimeout(() => {
                $(this).css('animation', '');
            }, 10);
        });

        // Enhanced spin functionality
        $("#spinBtn").click(function () {
            if (!prediction) {
                $("#resultText").text("⚠️ Vui lòng chọn Tài hoặc Xỉu để cược!");
                $("#resultText").css('color', '#ff6b6b');
                return;
            }

            if (balance < betAmount) {
                $("#resultText").text("⚠️ Số dư không đủ để đặt cược!");
                $("#resultText").css('color', '#ff6b6b');
                return;
            }

            // Disable spin button during animation
            $(this).prop('disabled', true);

            // Simulate dice rolling animation
            const diceElements = ['#dice1', '#dice2', '#dice3'];
            let rollCount = 0;
            const rollInterval = setInterval(() => {
                diceElements.forEach(dice => {
                    $(dice).text('🎲').css('transform', 'rotate(' + (Math.random() * 360) + 'deg)');
                });
                rollCount++;
                if (rollCount > 10) {
                    clearInterval(rollInterval);
                    performSpin();
                }
            }, 100);
        });

        function performSpin() {
            $.ajax({
                type: "POST",
                url: "/Game/Spin",
                data: { prediction: prediction, betAmount: betAmount },
                success: function (data) {
                    if (data.error) {
                        $("#resultText").text("⚠️ " + data.error);
                        $("#resultText").css('color', '#ff6b6b');
                        $("#spinBtn").prop('disabled', false);
                        return;
                    }

                    const dice = data.dice;
                    const sum = data.sum;
                    const result = data.result;
                    balance = data.balance;

                    // Update dice visuals
                    $('#dice1').text(`🎲 ${dice[0]}`);
                    $('#dice2').text(`🎲 ${dice[1]}`);
                    $('#dice3').text(`🎲 ${dice[2]}`);

                    // Determine if player won, lost, or drew
                    let gameOutcome;
                    let resultMessage = "";

                    if (result === prediction) {
                        gameOutcome = "win";
                        resultMessage = `🎉 Bạn đã thắng! (${sum})`;
                        $("#resultText").css('color', 'green');
                    } else if (result === "hoa") {
                        gameOutcome = "draw";
                        resultMessage = `🤝 Hòa rồi! (${sum})`;
                        $("#resultText").css('color', 'gray');
                    } else {
                        gameOutcome = "lose";
                        resultMessage = `😢 Thua rồi! (${sum})`;
                        $("#resultText").css('color', 'red');
                    }

                    $("#resultText").text(resultMessage);
                    $("#sumResult").text(`Tổng điểm: ${sum}`);
                    $("#balance").text(`$${balance}`);

                    // Add this result to latest results
                    const newResult = {
                        sum: sum,
                        result: result,
                        prediction: prediction,
                        outcome: gameOutcome,
                        timestamp: new Date()
                    };

                    updateLatestResults(newResult);

                    // Re-enable spin button
                    $("#spinBtn").prop('disabled', false);
                },
                error: function () {
                    $("#resultText").text("Unexpected Error.");
                    $("#resultText").css('color', '#ff6b6b');
                    $("#spinBtn").prop('disabled', false);
                }
            });
        }

        function updateLatestResults(newResult) {
            // Add new result to the beginning of the array
            latestResults.unshift(newResult);

            // Keep only the latest 8 results
            if (latestResults.length > 8) {
                latestResults = latestResults.slice(0, 8);
            }

            updateResultsDisplay();
        }

        function updateResultsDisplay() {
            const container = document.getElementById("resultsContainer");
            container.innerHTML = "";

            if (latestResults.length === 0) {
                container.innerHTML = '<span class="text-muted">Chưa có kết quả nào</span>';
                return;
            }

            latestResults.forEach(r => {
                const span = document.createElement("span");
                span.classList.add("result-badge");

                let displayText = "";
                let resultType = "";

                // Determine the display based on the actual game result
                if (r.result === "hoa") {
                    span.classList.add("draw");
                    displayText = `Hòa: ${r.sum}`;
                } else if (r.outcome === "win") {
                    span.classList.add("win");
                    displayText = `Thắng: ${r.sum}`;
                } else {
                    span.classList.add("lose");
                    displayText = `Thua: ${r.sum}`;
                }

                span.textContent = displayText;
                span.title = `${r.result.toUpperCase()} - ${new Date(r.timestamp).toLocaleTimeString()}`;
                container.appendChild(span);
            });
        }
    </script>
</body>
</html>