<<<<<<< HEAD
﻿﻿@{
=======
﻿@{
>>>>>>> develop
    Layout = "_GameLayout";
}
<!DOCTYPE html>
<html>
<head>
    <title>Game Tài Xỉu</title>
    <h2>Chào mừng đến với phòng: @ViewBag.RoomName</h2>
<<<<<<< HEAD
    <link rel="stylesheet" href="~/css/SicBo.css" asp-append-version="true" />
=======
    <link rel="stylesheet" href="~/css/Room.css" asp-append-version="true" />
>>>>>>> develop
    <style>
        body {
            background: #343a40;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .main-layout {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            background: #343a40;
            color: white;
            padding: 20px;
            width: 250px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

            .sidebar .user-card h4 {
                font-weight: 700;
            }

            .sidebar a {
                color: #adb5bd;
                text-decoration: none;
                margin-top: 20px;
                font-weight: 500;
            }

                .sidebar a:hover {
                    color: white;
                    text-decoration: underline;
                }

        .game-section {
            flex-grow: 1;
            padding: 40px;
            background: #343a40;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .dice-wrapper {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .containerD {
            width: 80px;
            height: 80px;
            background: #007bff;
            color: white;
            font-size: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 12px;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.5);
            user-select: none;
        }

        .prediction-buttons {
            margin-bottom: 20px;
        }

        .predict-btn {
            margin: 0 10px;
            padding: 10px 30px;
            font-weight: 600;
            border-radius: 30px;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .predict-btn[data-value="xiu"] {
                background-color: #17a2b8;
                color: white;
            }

            .predict-btn[data-value="tai"] {
                background-color: #28a745;
                color: white;
            }

            .predict-btn:hover {
                opacity: 0.8;
            }

            .predict-btn:focus {
                outline: none;
                box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
            }

            .predict-btn.active {
                background-color: #8f8 !important;
            }

        #spinBtn {
            padding: 12px 40px;
            font-weight: 700;
            background-color: #ffc107;
            border: none;
            border-radius: 40px;
            color: #212529;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(255, 193, 7, 0.6);
            margin-bottom: 20px;
        }

            #spinBtn:hover {
                background-color: #e0a800;
            }

        #resultText {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 8px;
        }

        #sumResult {
            font-size: 1.1rem;
            margin-bottom: 20px;
            font-weight: 500;
        }

        /* Latest results container */
        #latestResults {
            width: 100%;
            max-width: 400px;
            margin-top: 30px;
            text-align: center;
        }

            #latestResults h5 {
                margin-bottom: 10px;
                font-weight: 600;
                color: white;
            }

        .result-badge {
            display: inline-block;
            color: white;
            padding: 8px 14px;
            margin: 0 5px 5px 0;
            border-radius: 20px;
            font-weight: 600;
            user-select: none;
            min-width: 45px;
            text-align: center;
            box-shadow: 0 2px 6px rgba(0,0,0,0.15);
            transition: background-color 0.3s ease;
        }

            .result-badge.tai {
<<<<<<< HEAD
            }

            .result-badge.xiu {
=======

            }

            .result-badge.xiu {
                
>>>>>>> develop
            }

            .result-badge.hoa {
                background-color: #e9ecef;
                color: #212529;
            }

            .result-badge.win {
                background-color: #28a745 !important;
                color: white;
                box-shadow: 0 0 8px #28a745aa;
            }

            .result-badge.lose {
                background-color: #dc3545 !important;
                color: white;
                box-shadow: 0 0 8px #dc3545aa;
            }

            .result-badge.draw {
                background-color: #e9ecef !important;
                color: #212529;
                box-shadow: none;
            }
    </style>
</head>
<body>
    <div class="main-layout">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="user-card" id="user1">
                <h4>Bạn</h4>
                <p>Số dư: <span id="balance">$100</span></p>
            </div>
            <a href="/Home/Index">Thoát</a>
        </aside>

        <section class="game-section">
            <div class="dice-wrapper">
                <div class="containerD" id="dice1"></div>
                <div class="containerD" id="dice2"></div>
                <div class="containerD" id="dice3"></div>
            </div>

            <div id="latestResults" class="text-center">
                <h5>6 Lần Kết Quả Mới Nhất</h5>
                <div id="resultsContainer"></div>
            </div>

            <div class="prediction-buttons">
                <button class="predict-btn" data-value="xiu">Xỉu (4-10)</button>
                <button class="predict-btn" data-value="tai">Tài (11-17)</button>
            </div>

            <button class="btn" id="spinBtn">Lắc Xúc Xắc</button>
            <p id="resultText"></p>
            <p id="sumResult"></p>
        </section>
    </div>

    <script>
        const spinBtn = document.getElementById("spinBtn");
        const resultText = document.getElementById("resultText");
        const sumResult = document.getElementById("sumResult");
        const balanceText = document.getElementById("balance");
        const predictButtons = document.querySelectorAll(".predict-btn");
        const diceDivs = [document.getElementById("dice1"), document.getElementById("dice2"), document.getElementById("dice3")];
        const resultsContainer = document.getElementById("resultsContainer");

        let prediction = null;
        let balance = 100;
        let latestResults = [];

        predictButtons.forEach(btn => {
            btn.addEventListener("click", () => {
                prediction = btn.dataset.value;
                predictButtons.forEach(b => b.style.backgroundColor = "");
                btn.style.backgroundColor = "#8f8";
            });
        });

        function rollDice() {
            return Math.floor(Math.random() * 6) + 1;
        }

        function updateLatestResults(newResult) {
            latestResults.unshift(newResult);
            if (latestResults.length > 6) {
                latestResults.pop();
            }

            resultsContainer.innerHTML = "";

            latestResults.forEach(r => {
                const span = document.createElement("span");
                span.classList.add("result-badge");

                span.classList.add(r.result);

                if (r.result === 'hoa') {
                    span.classList.add("draw");
                } else if (r.prediction === r.result) {
                    span.classList.add("win");
                } else {
                    span.classList.add("lose");
                }

                span.textContent = `${r.sum} (${r.result.toUpperCase()})`;
                resultsContainer.appendChild(span);
            });
        }

        spinBtn.addEventListener("click", () => {
            if (!prediction) {
                resultText.textContent = "Vui lòng chọn Tài hoặc Xỉu để cược.";
                return;
            }

            const dice = [rollDice(), rollDice(), rollDice()];
            const sum = dice.reduce((a, b) => a + b, 0);

            // Hiển thị số xúc xắc
            diceDivs.forEach((div, i) => {
                div.textContent = `🎲 ${dice[i]}`;
            });

            sumResult.textContent = `Tổng: ${sum}`;

            const result = (sum >= 11 && sum <= 17) ? "tai" :
                (sum >= 4 && sum <= 10) ? "xiu" : "hoa";

            if (result === prediction) {
                resultText.textContent = "✅ You Won!";
                balance += 10;
            } else if (result === 'hoa') {
                resultText.textContent = "Draw!";
            } else {
                resultText.textContent = "❌ You Lost!";
                balance -= 10;
            }

            balanceText.textContent = `$${balance}`;

            updateLatestResults({ sum, result, prediction });
        });
    </script>
</body>
<<<<<<< HEAD
</html>
=======
</html>
>>>>>>> develop
